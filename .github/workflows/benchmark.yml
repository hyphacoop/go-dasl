name: Benchmark

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - name: Restore benchstat
        uses: actions/cache@v4
        with:
          path: ~/go/bin/benchstat
          key: ${{ runner.os }}-benchstat

      - name: Install benchstat
        run: |
          if [[ ! -f ~/go/bin/benchstat ]]; then
            go install golang.org/x/perf/cmd/benchstat@latest
          fi

      - name: Restore base benchmark result
        uses: actions/cache@v4
        with:
          path: bench-base.txt
          key: ${{ runner.os }}-bench-${{ github.event.pull_request.base.sha }}

      - name: Run benchmarks on current branch
        run: go test -run='^$' -bench=. -count=20 -benchmem ./drisl > bench-current.txt

      - name: Run base branch benchmarks
        run: |
          if [[ ! -f bench-base.txt ]]; then
            git checkout ${{ github.event.pull_request.base.sha }}
            go test -run='^$' -bench=. -count=20 -benchmem ./drisl > bench-base.txt
            git checkout ${{ github.event.pull_request.head.sha }}
          fi

      - name: Compare benchmarks with benchstat
        run: |
          echo "## Benchmark Results" > benchmark_report.md
          echo "" >> benchmark_report.md
          echo "### Performance Regression Analysis" >> benchmark_report.md
          echo '```' >> benchmark_report.md
          benchstat bench-base.txt bench-current.txt >> benchmark_report.md || echo "No significant differences found" >> benchmark_report.md
          echo '```' >> benchmark_report.md
          cat benchmark_report.md > $GITHUB_STEP_SUMMARY

      - name: Comment PR with benchmark results
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: benchmark_report.md
